/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frame;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Course.*;
import Report.Report;
import User.*;

/**
 *
 * @author Azuri
 */
public class Import extends javax.swing.JFrame {

    /**
     * Creates new form Import
     */
    private ArrayList<String> studentNames = new ArrayList<>();
    private ArrayList<String> studentIDs = new ArrayList<>();
    private ArrayList<Student> students = new ArrayList<>();

    List<Double> studentTotalMarkModule1 = new ArrayList<>();
    List<Double> studentTotalMarkModule2 = new ArrayList<>();
    List<Double> studentTotalMarkModule3 = new ArrayList<>();
    List<Double> studentTotalMarkModule4 = new ArrayList<>();
    List<Double> studentTotalMarkModule5 = new ArrayList<>();

    String CourseName[] = new String[5];

    private String filePath;
    private Course[] CourseInfo;
    private int countStudent = 0;
    private int countModule = 0;

    public Import(String filePath, Course[] CourseInfo) {
        this.filePath = filePath;
        this.CourseInfo = CourseInfo;

        readStudentFile();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Menu = new javax.swing.JPanel();
        BarTop1 = new javax.swing.JPanel();
        BarTop = new javax.swing.JPanel();
        accountLogo = new javax.swing.JLabel();
        TextAdmin = new javax.swing.JLabel();
        ManageCourseBtn = new javax.swing.JButton();
        PercentageBtn = new javax.swing.JButton();
        ImportBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CalculateBtn = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Module3 = new javax.swing.JButton();
        Module1Btn = new javax.swing.JButton();
        Module4 = new javax.swing.JButton();
        Module2 = new javax.swing.JButton();
        Module5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(47, 102, 144));

        Menu.setBackground(new java.awt.Color(22, 66, 91));

        BarTop1.setBackground(new java.awt.Color(58, 124, 165));
        BarTop1.setPreferredSize(new java.awt.Dimension(126, 2));

        javax.swing.GroupLayout BarTop1Layout = new javax.swing.GroupLayout(BarTop1);
        BarTop1.setLayout(BarTop1Layout);
        BarTop1Layout.setHorizontalGroup(
                BarTop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE));
        BarTop1Layout.setVerticalGroup(
                BarTop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 3, Short.MAX_VALUE));

        BarTop.setBackground(new java.awt.Color(58, 124, 165));
        BarTop.setPreferredSize(new java.awt.Dimension(126, 2));

        javax.swing.GroupLayout BarTopLayout = new javax.swing.GroupLayout(BarTop);
        BarTop.setLayout(BarTopLayout);
        BarTopLayout.setHorizontalGroup(
                BarTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE));
        BarTopLayout.setVerticalGroup(
                BarTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 3, Short.MAX_VALUE));

        accountLogo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        accountLogo.setForeground(new java.awt.Color(255, 255, 255));
        accountLogo.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/assets/icons8-male-user-50.png"))); // NOI18N

        TextAdmin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TextAdmin.setForeground(new java.awt.Color(255, 255, 255));
        TextAdmin.setText("ADMIN");

        ManageCourseBtn.setBackground(new java.awt.Color(47, 102, 144));
        ManageCourseBtn.setForeground(new java.awt.Color(255, 255, 255));
        ManageCourseBtn.setText("Manage Course");
        ManageCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageCourseBtnActionPerformed(evt);
            }
        });

        PercentageBtn.setBackground(new java.awt.Color(47, 102, 144));
        PercentageBtn.setForeground(new java.awt.Color(255, 255, 255));
        PercentageBtn.setText("Percentage");
        PercentageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PercentageBtnActionPerformed(evt);
            }
        });

        ImportBtn.setBackground(new java.awt.Color(47, 102, 144));
        ImportBtn.setForeground(new java.awt.Color(255, 255, 255));
        ImportBtn.setText("Import");
        ImportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportBtnActionPerformed(evt);
            }
        });

        logoutBtn.setBackground(new java.awt.Color(47, 102, 144));
        logoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logoutBtn.setText("Log Out");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-create-order-32.png"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-document-32.png"))); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-download-32.png"))); // NOI18N

        javax.swing.GroupLayout MenuLayout = new javax.swing.GroupLayout(Menu);
        Menu.setLayout(MenuLayout);
        MenuLayout.setHorizontalGroup(
                MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(MenuLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(BarTop1, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                        .addGroup(MenuLayout.createSequentialGroup()
                                                .addGroup(MenuLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(MenuLayout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel11)
                                                                .addComponent(jLabel12,
                                                                        javax.swing.GroupLayout.Alignment.TRAILING))
                                                        .addComponent(jLabel13,
                                                                javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(MenuLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(PercentageBtn,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(ManageCourseBtn,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(ImportBtn, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(BarTop, javax.swing.GroupLayout.DEFAULT_SIZE, 154,
                                                Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuLayout
                                                .createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(accountLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(TextAdmin)
                                                .addGap(16, 16, 16))
                                        .addComponent(logoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap()));
        MenuLayout.setVerticalGroup(
                MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(MenuLayout.createSequentialGroup()
                                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(MenuLayout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addComponent(TextAdmin))
                                        .addGroup(MenuLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(accountLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BarTop, javax.swing.GroupLayout.PREFERRED_SIZE, 3,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuLayout
                                                .createSequentialGroup()
                                                .addGroup(MenuLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(ManageCourseBtn)
                                                        .addComponent(jLabel11))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(PercentageBtn))
                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(ImportBtn)
                                        .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BarTop1, javax.swing.GroupLayout.PREFERRED_SIZE, 3,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(logoutBtn)
                                .addGap(29, 29, 29)));

        jPanel2.setBackground(new java.awt.Color(22, 66, 91));

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("STUDENT LIST");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Square44x44Logo.targetsize-36.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Calculate GPA");

        CalculateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons8-advance-50.png"))); // NOI18N
                                                                                                                  // Square44x44Logo.targetsize-36
        CalculateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CalculateBtnMouseClicked(evt);
            }
        });
        if (CourseInfo[0] == null || CourseInfo[0].getCourseName() == null) {
            CourseName[0] = "Subject 1";
        } else {
            CourseName[0] = CourseInfo[0].getCourseName();
        }

        if (CourseInfo[1] == null || CourseInfo[1].getCourseName() == null) {
            CourseName[1] = "Subject 2";
        } else {
            CourseName[1] = CourseInfo[1].getCourseName();
        }

        if (CourseInfo[2] == null || CourseInfo[2].getCourseName() == null) {
            CourseName[2] = "Subject 3";
        } else {
            CourseName[2] = CourseInfo[2].getCourseName();
        }

        if (CourseInfo[3] == null || CourseInfo[3].getCourseName() == null) {
            CourseName[3] = "Subject 4";
        } else {
            CourseName[3] = CourseInfo[3].getCourseName();
        }
        if (CourseInfo[4] == null || CourseInfo[4].getCourseName() == null) {
            CourseName[4] = "Subject 5";
        } else {
            CourseName[4] = CourseInfo[4].getCourseName();
        }
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null, null, null, null, null },
                        { null, null, null, null, null, null, null, null },
                        { null, null, null, null, null, null, null, null },
                        { null, null, null, null, null, null, null, null }
                },
                new String[] {
                        "Student ID", "Student Name", CourseName[0], CourseName[1], CourseName[2], CourseName[3],
                        CourseName[4],
                        "GPA"
                }) {
            @SuppressWarnings("rawtypes")
            Class[] types = new Class[] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            @SuppressWarnings("rawtypes")
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        populateTable();
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/User Male.png"))); // NOI18N
        jLabel5.setText("jLabel5");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Check All.png"))); // NOI18N
        jLabel6.setText("jLabel6");

        Module3.setText(CourseName[2]);
        Module3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Module3ActionPerformed(evt);
            }
        });

        Module1Btn.setText(CourseName[0]);
        Module1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Module1BtnActionPerformed(evt);
            }
        });

        Module4.setText(CourseName[3]);
        Module4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Module4ActionPerformed(evt);
            }
        });

        Module2.setText(CourseName[1]);
        Module2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Module2ActionPerformed(evt);
            }
        });

        Module5.setText(CourseName[4]);
        Module5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Module5ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Import all module mark for calculation");

        jLabel8.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText(String.valueOf(countStudent));

        jLabel9.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(String.valueOf(countModule) + "/5");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addComponent(jLabel7))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGap(31, 31, 31)
                                                                .addComponent(jLabel5,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 37,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel8)
                                                                .addGap(67, 67, 67)
                                                                .addComponent(jLabel6,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 37,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel9,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 37,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(39, 39, 39)
                                                .addComponent(Module1Btn)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Module2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Module3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Module4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Module5)
                                                .addContainerGap(95, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jScrollPane1)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addComponent(jLabel1,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 37,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel2,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 150,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        Short.MAX_VALUE)
                                                                .addComponent(jLabel3)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(CalculateBtn)))
                                                .addGap(54, 54, 54)))));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addGroup(jPanel2Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel3)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addComponent(CalculateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(Module1Btn)
                                        .addComponent(Module2)
                                        .addComponent(Module3)
                                        .addComponent(Module4)
                                        .addComponent(Module5)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                .addContainerGap(38, Short.MAX_VALUE)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ManageCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ManageCourseBtnActionPerformed
        // TODO add your handling code here:
        dispose();
        ManageCourse frame = new ManageCourse(CourseInfo);
        frame.setVisible(true);

    }// GEN-LAST:event_ManageCourseBtnActionPerformed

    private void PercentageBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_PercentageBtnActionPerformed
        // TODO add your handling code here:
        try {
            Percentage Frame = new Percentage(CourseInfo);
            Frame.setVisible(true);
            dispose();
    } catch (Exception e) {
            // TODO: handle exception
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Cannot Assign Yet! | " + e);
    }
    }// GEN-LAST:event_PercentageBtnActionPerformed

    private void ImportBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ImportBtnActionPerformed
        // TODO add your handling code here:
        String filePath = JOptionPane.showInputDialog(this,
                "Please enter the file path:",
                "Import File",
                JOptionPane.PLAIN_MESSAGE);

        // Check if the user entered a file path
        if (filePath != null && !filePath.trim().isEmpty()) {
            // User entered a file path, you can now use this file path for your logic
            // Example: Print the file path
            System.out.println("File path entered: " + filePath);
            Import frame = new Import(filePath, CourseInfo);
            frame.setVisible(true);
            dispose();

        } else {
            // User did not enter a valid file path (they might have canceled or left it
            // blank)
            System.out.println("No file path entered or operation was canceled.");
        }
    }// GEN-LAST:event_ImportBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        dispose();
        LoginPage loginFrame = new LoginPage();
        loginFrame.setVisible(true);
    }// GEN-LAST:event_logoutBtnActionPerformed

    private void Module1BtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Module1BtnActionPerformed
        // TODO add your handling code here:
        if (CourseInfo[0] instanceof Subject1) {
            String filePath = JOptionPane.showInputDialog(this,
                    "Please enter the file location of Mark " + CourseName[0] + ".csv (path/to/your/[fileName].csv):",
                    "Import File",
                    JOptionPane.PLAIN_MESSAGE);

            // Check if the user entered a file path
            if (filePath != null && !filePath.trim().isEmpty()) {
                // User entered a file path, you can now use this file path for your logic
                // Example: Print the file path

                Subject1 info = (Subject1) CourseInfo[0];
                info.getTotalMark(filePath);
                studentTotalMarkModule1 = info.getStudentTotalMark();
                getCharGrade1();

                countModule++;
                jLabel9.setText(String.valueOf(countModule) + "/5");
                jLabel9.revalidate();
                jLabel9.repaint();

            } else {
                // User did not enter a valid file path (they might have canceled or left it
                // blank)
                System.out.println("No file path entered or operation was canceled.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "You Not Assign This Course");
        }

    }// GEN-LAST:event_Module1BtnActionPerformed

    private void Module2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Module2ActionPerformed
        // TODO add your handling code here:
        if (CourseInfo[1] instanceof Subject2) {
            String filePath = JOptionPane.showInputDialog(this,
                    "Please enter the file location of Mark " + CourseName[1] + ".csv (path/to/your/[fileName].csv):",
                    "Import File",
                    JOptionPane.PLAIN_MESSAGE);

            // Check if the user entered a file path
            if (filePath != null && !filePath.trim().isEmpty()) {
                // User entered a file path, you can now use this file path for your logic
                // Example: Print the file path

                Subject2 info = (Subject2) CourseInfo[1];
                info.getTotalMark(filePath);
                studentTotalMarkModule2 = info.getStudentTotalMark();
                getCharGrade2();

                countModule++;
                jLabel9.setText(String.valueOf(countModule) + "/5");
                jLabel9.revalidate();
                jLabel9.repaint();

            } else {
                // User did not enter a valid file path (they might have canceled or left it
                // blank)
                System.out.println("No file path entered or operation was canceled.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "You Not Assign This Course");
        }

    }// GEN-LAST:event_Module2ActionPerformed

    private void Module3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Module3ActionPerformed
        // TODO add your handling code here:
        if (CourseInfo[2] instanceof Subject3) {
            String filePath = JOptionPane.showInputDialog(this,
                    "Please enter the file location of Mark " + CourseName[2] + ".csv (path/to/your/[fileName].csv):",
                    "Import File",
                    JOptionPane.PLAIN_MESSAGE);

            // Check if the user entered a file path
            if (filePath != null && !filePath.trim().isEmpty()) {
                // User entered a file path, you can now use this file path for your logic
                // Example: Print the file path

                Subject3 info = (Subject3) CourseInfo[2];
                info.getTotalMark(filePath);
                studentTotalMarkModule3 = info.getStudentTotalMark();
                getCharGrade3();

                countModule++;
                jLabel9.setText(String.valueOf(countModule) + "/5");
                jLabel9.revalidate();
                jLabel9.repaint();

            } else {
                // User did not enter a valid file path (they might have canceled or left it
                // blank)
                System.out.println("No file path entered or operation was canceled.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "You Not Assign This Course");
        }

    }// GEN-LAST:event_Module3ActionPerformed

    private void Module4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Module4ActionPerformed
        // TODO add your handling code here:
        if (CourseInfo[3] instanceof Subject4) {
            String filePath = JOptionPane.showInputDialog(this,
                    "Please enter the file location of Mark " + CourseName[3] + ".csv (path/to/your/[fileName].csv):",
                    "Import File",
                    JOptionPane.PLAIN_MESSAGE);

            // Check if the user entered a file path
            if (filePath != null && !filePath.trim().isEmpty()) {
                // User entered a file path, you can now use this file path for your logic
                // Example: Print the file path

                Subject4 info = (Subject4) CourseInfo[3];
                info.getTotalMark(filePath);
                studentTotalMarkModule4 = info.getStudentTotalMark();
                getCharGrade4();

                countModule++;
                jLabel9.setText(String.valueOf(countModule) + "/5");
                jLabel9.revalidate();
                jLabel9.repaint();

            } else {
                // User did not enter a valid file path (they might have canceled or left it
                // blank)
                System.out.println("No file path entered or operation was canceled.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "You Not Assign This Course");
        }

    }// GEN-LAST:event_Module4ActionPerformed

    private void Module5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Module5ActionPerformed
        // TODO add your handling code here:
        if (CourseInfo[4] instanceof Subject5) {
            String filePath = JOptionPane.showInputDialog(this,
                    "Please enter the file location of Mark " + CourseName[4] + ".csv (path/to/your/[fileName].csv):",
                    "Import File",
                    JOptionPane.PLAIN_MESSAGE);

            // Check if the user entered a file path
            if (filePath != null && !filePath.trim().isEmpty()) {
                // User entered a file path, you can now use this file path for your logic
                // Example: Print the file path

                Subject5 info = (Subject5) CourseInfo[4];
                info.getTotalMark(filePath);
                studentTotalMarkModule5 = info.getStudentTotalMark();
                getCharGrade5();

                countModule++;
                jLabel9.setText(String.valueOf(countModule) + "/5");
                jLabel9.revalidate();
                jLabel9.repaint();

            } else {
                // User did not enter a valid file path (they might have canceled or left it
                // blank)
                System.out.println("No file path entered or operation was canceled.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "You Not Assign This Course");
        }

    }// GEN-LAST:event_Module5ActionPerformed

    private void CalculateBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_CalculateBtnMouseClicked
        // TODO add your handling code here:
        getDoubleGpa();
        generateReport();
        
    }// GEN-LAST:event_CalculateBtnMouseClicked

    public void generateReport() {
        // Create report object with necessary data
        Report info = new Report(students, studentTotalMarkModule1, studentTotalMarkModule2,
                studentTotalMarkModule3, studentTotalMarkModule4, studentTotalMarkModule5);
    
        // Prompt user to confirm if they want to continue
        int userChoice = JOptionPane.showConfirmDialog(null, "Do you want to generate the report?", "Confirm Report Generation", JOptionPane.YES_NO_OPTION);
    
        if (userChoice == JOptionPane.YES_OPTION) {
            // Prompt user to enter the file location using JOptionPane
            String filePath = JOptionPane.showInputDialog(null, "Please enter the file location to Export (path/to/your/[fileName].csv):");
    
            // Check if the user provided a file path
            if (filePath != null && !filePath.trim().isEmpty()) {
                // Generate CSV report
                info.generateCSVReport(filePath);
                JOptionPane.showMessageDialog(null, "Report successfully generated at " + filePath, "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "File path cannot be empty. Report generation cancelled.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Report generation cancelled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void readStudentFile() {
        String line = "";
        try (BufferedReader studentFile = new BufferedReader(new FileReader(filePath))) {
            // Read data from CSV file
            while ((line = studentFile.readLine()) != null) {
                String[] values = line.split(",");
                if (values.length >= 2) {
                    studentIDs.add(values[0]);
                    studentNames.add(values[1]);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        // Clear previous student data
        if (students != null) {
            students.clear();
            countStudent = 0;
        }
        // Create student objects and add them to the list
        for (int i = 0; i < studentNames.size(); i++) {
            students.add(new Student(studentNames.get(i), studentIDs.get(i), CourseInfo));
            countStudent++;
        }
    }

    private void populateTable() {
        // Get the table model
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Clear any existing rows
        model.setRowCount(0);

        // Add rows to the table model
        for (int i = 0; i < students.size(); i++) {
            String studentID = studentIDs.get(i);
            String studentName = studentNames.get(i);
            model.addRow(new Object[] {
                    studentID,
                    studentName
            });
        }
    }

    private void getCharGrade1() {
        // Get the table model
        Report Reportinfo = new Report(students, studentTotalMarkModule1, studentTotalMarkModule2,
                studentTotalMarkModule3, studentTotalMarkModule4, studentTotalMarkModule5);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < students.size(); i++) {
            String Grade = Reportinfo.getGrade(Reportinfo.getGradePointsModule1().get(i));
            model.setValueAt(Grade, i, 2);
        }
    }

    private void getCharGrade2() {
        // Get the table model
        Report Reportinfo = new Report(students, studentTotalMarkModule1, studentTotalMarkModule2,
                studentTotalMarkModule3, studentTotalMarkModule4, studentTotalMarkModule5);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < students.size(); i++) {
            String Grade = Reportinfo.getGrade(Reportinfo.getGradePointsModule2().get(i));
            model.setValueAt(Grade, i, 3);
        }
    }

    private void getCharGrade3() {
        // Get the table model
        Report Reportinfo = new Report(students, studentTotalMarkModule1, studentTotalMarkModule2,
                studentTotalMarkModule3, studentTotalMarkModule4, studentTotalMarkModule5);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < students.size(); i++) {
            String Grade = Reportinfo.getGrade(Reportinfo.getGradePointsModule3().get(i));
            model.setValueAt(Grade, i, 4);
        }
    }

    private void getCharGrade4() {
        // Get the table model
        Report Reportinfo = new Report(students, studentTotalMarkModule1, studentTotalMarkModule2,
                studentTotalMarkModule3, studentTotalMarkModule4, studentTotalMarkModule5);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < students.size(); i++) {
            String Grade = Reportinfo.getGrade(Reportinfo.getGradePointsModule4().get(i));
            model.setValueAt(Grade, i, 5);
        }
    }

    private void getCharGrade5() {
        // Get the table model
        Report Reportinfo = new Report(students, studentTotalMarkModule1, studentTotalMarkModule2,
                studentTotalMarkModule3, studentTotalMarkModule4, studentTotalMarkModule5);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < students.size(); i++) {
            String Grade = Reportinfo.getGrade(Reportinfo.getGradePointsModule5().get(i));
            model.setValueAt(Grade, i, 6);
        }
    }

    private void getDoubleGpa() {
        // Get the table model
        Report Reportinfo = new Report(students, studentTotalMarkModule1, studentTotalMarkModule2,
                studentTotalMarkModule3, studentTotalMarkModule4, studentTotalMarkModule5);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < students.size(); i++) {
            double Grade = Reportinfo.getGPA().get(i);
            String formattedGpa = String.format("%.2f", Grade);
            model.setValueAt(formattedGpa, i, 7);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BarTop;
    private javax.swing.JPanel BarTop1;
    private javax.swing.JLabel CalculateBtn;
    private javax.swing.JButton ImportBtn;
    private javax.swing.JButton ManageCourseBtn;
    private javax.swing.JPanel Menu;
    private javax.swing.JButton Module1Btn;
    private javax.swing.JButton Module2;
    private javax.swing.JButton Module3;
    private javax.swing.JButton Module4;
    private javax.swing.JButton Module5;
    private javax.swing.JButton PercentageBtn;
    private javax.swing.JLabel TextAdmin;
    private javax.swing.JLabel accountLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logoutBtn;
    // End of variables declaration//GEN-END:variables
}
